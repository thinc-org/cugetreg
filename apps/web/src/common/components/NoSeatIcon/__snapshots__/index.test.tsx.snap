// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`NoSeatIcon > Should render correctly when open is false 1`] = `
<Fragment>
  <ForwardRef(IconButton)
    aria-haspopup="true"
    aria-owns="mouse-over-popover"
    color="primary"
    onMouseEnter={[MockFunction spy]}
    onMouseLeave={[MockFunction spy]}
    size="small"
  >
    <Memo(ForwardRef(ErrorOutlineIcon))
      fontSize="inherit"
    />
  </ForwardRef(IconButton)>
  <ForwardRef(Popover)
    anchorEl={<a />}
    anchorOrigin={
      {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    container="current"
    disableRestoreFocus={true}
    id="mouse-over-popover"
    onClose={[MockFunction spy]}
    open={[MockFunction spy]}
    sx={
      {
        "pointerEvents": "none",
      }
    }
    transformOrigin={
      {
        "horizontal": "left",
        "vertical": "top",
      }
    }
  >
    <ForwardRef(Container)
      maxWidth="sm"
    >
      <ForwardRef(Typography)
        variant="body1"
      >
        <p />
      </ForwardRef(Typography)>
    </ForwardRef(Container)>
  </ForwardRef(Popover)>
</Fragment>
`;

exports[`NoSeatIcon > Should render correctly when open is true 1`] = `
<Fragment>
  <ForwardRef(IconButton)
    aria-haspopup="true"
    aria-owns="mouse-over-popover"
    color="primary"
    onMouseEnter={[MockFunction spy]}
    onMouseLeave={[MockFunction spy]}
    size="small"
  >
    <Memo(ForwardRef(ErrorOutlineIcon))
      fontSize="inherit"
    />
  </ForwardRef(IconButton)>
  <ForwardRef(Popover)
    anchorEl={<a />}
    anchorOrigin={
      {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    container="current"
    disableRestoreFocus={true}
    id="mouse-over-popover"
    onClose={[MockFunction spy]}
    open={[MockFunction spy]}
    sx={
      {
        "pointerEvents": "none",
      }
    }
    transformOrigin={
      {
        "horizontal": "left",
        "vertical": "top",
      }
    }
  >
    <ForwardRef(Container)
      maxWidth="sm"
    >
      <ForwardRef(Typography)
        variant="body1"
      >
        <p />
      </ForwardRef(Typography)>
    </ForwardRef(Container)>
  </ForwardRef(Popover)>
</Fragment>
`;
