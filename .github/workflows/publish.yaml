name: Publish
on:
  push:
    tags: '*'

permissions:
  contents: write
  packages: write

jobs:
  publish-docker-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set prod env
        run: mv apps/cugetreg-web/.env.prod apps/cugetreg-web/.env

      - name: Extract app and version
        id: meta
        env:
          TAG: ${{ github.ref_name }}
        run: |
          echo "::set-output name=APP::${TAG%@*}"
          echo "::set-output name=VERSION::${TAG##*@}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build Docker images
        run: npx nx run ${{ steps.meta.outputs.APP }}:docker-build

      - name: Tag and push Docker images
        run: |
          docker image tag ${{ steps.meta.outputs.APP }}:latest ghcr.io/thinc-org/${{ steps.meta.outputs.APP }}:${{ steps.meta.outputs.VERSION }}
          docker push ghcr.io/thinc-org/${{ steps.meta.outputs.APP }}:${{ steps.meta.outputs.VERSION }}

          docker image tag ${{ steps.meta.outputs.APP }}:latest ghcr.io/thinc-org/${{ steps.meta.outputs.APP }}:latest
          docker push ghcr.io/thinc-org/${{ steps.meta.outputs.APP }}:latest

      - name: Generate release note
        run: |
          git diff --color-words --unified=0 HEAD HEAD~ apps/${{ steps.extract.outputs.APP }}/CHANGELOG.md \
            | tail -n +8 \
            | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" > RELEASE.md

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: 'RELEASE.md'
          artifacts: 'apps/${{ steps.meta.outputs.APP }}/CHANGELOG.md'
