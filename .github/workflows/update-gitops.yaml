name: Update GitOps repository

on:
  workflow_call:
    inputs:
      packages:
        description: 'Packages to update'
        required: true
        type: string
      environment:
        description: 'Environment e.g. beta, prod, main used to define path to kustomize overlay'
        required: true
        type: string
      image-prefix:
        description: 'Prefix of image e.g. thinc-org/cugetreg'
        required: true
        type: string
      gitops-repository:
        description: 'Target GitOps repository'
        required: true
        type: string
      gitops-ref:
        description: 'Target GitOps ref'
        type: string
        default: refs/heads/master
      container-registry:
        description: 'Container registry e.g. ghcr.io'
        type: string
        default: ghcr.io
      mode:
        description: 'Mode of the action, pr or commit'
        type: string
        default: pr
    secrets:
      GH_TOKEN:
        description: 'GitHub token used to checkout GitOps repository and open PR'
        required: true

jobs:
  update-gitops:
    name: Update GitOps and Open PR

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.gitops-repository }}
          ref: ${{ inputs.gitops-ref }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Kustomize
        uses: multani/action-setup-kustomize@v1
        with:
          version: 5.0.0

      - name: Update kustomize configuration
        run: |
          for row in $(echo "$PACKAGES" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
            NAME=$(_jq '.name')
            IMAGE_TAG=$(_jq '.imageTag')
            PREFIX=${{ inputs.container-registry }}/${{ inputs.image-prefix }}
            KUSTOMIZE_PATH=$NAME/overlays/${{ inputs.environment }}
            [ -d "$KUSTOMIZE_PATH" ] && bash -c "cd $KUSTOMIZE_PATH && kustomize edit set image $NAME=$PREFIX/$NAME:$IMAGE_TAG"
            echo "${NAME}:${IMAGE_TAG} is updated"
          done
        env:
          PACKAGES: ${{ inputs.packages }}

      - name: Show Git Status
        run: git status

      - name: Prepare Pull Request body
        id: pr-body
        if: ${{ inputs.mode == 'pr' }}
        run: |
          echo "DATE=$(date +'%d/%m/%Y')" >> $GITHUB_OUTPUT
          UPDATED_PACKAGES=$(echo "$PACKAGES" | jq -r '.[] | "- \(.name): \(.imageTag)"')
          echo "UPDATED_PACKAGES<<EOF" >> $GITHUB_ENV
          echo "$UPDATED_PACKAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          PACKAGES: ${{ inputs.packages }}

      - name: Create Pull Request to GitOps
        uses: peter-evans/create-pull-request@v4
        if: ${{ inputs.mode == 'pr' }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: update gitops
          branch: update-gitops
          base: ${{ inputs.gitops-ref }}
          title: Update GitOps
          body: |
            # Update GitOps

            Date ${{ steps.pr-body.outputs.DATE }}

            > This PR is automatically generated

            ## Updated Packages

            ${{ env.UPDATED_PACKAGES }}

      - name: Add, commit and push to the repository
        uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ inputs.mode == 'commit' }}
        with:
          commit_message: Update GitOps
