name: Run test coverage

on:
  pull_request:
  push:
    branches: [beta, dev, master]

jobs:
  test:
    strategy:
      matrix:
        node-version: [14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Wait for install depedencies
        if: github.event_name == 'pull_request'
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'Install depedencies'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn --fronzen-lockfile

      - name: Collect test coverage
        run: yarn test:ci

      - name: Set branch name
        id: vars
        run: echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}

      - name: Archive code coverage results
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report-${{ steps.vars.outputs.branch_name }}
          path: report.json

      - name: Download a single artifact
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report-${{ github.base_ref }}
          path: base-coverage

      - name: Extract code coverage
        if: github.event_name == 'pull_request'
        uses: ArtiomTr/jest-coverage-report-action@v2.0-rc.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          package-manager: yarn
          annotations: failed-tests
          skip-step: all
          base-coverage-file: ./base-coverage/report.json
