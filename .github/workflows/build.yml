name: Dry build test

on: pull_request

permissions:
  contents: read
  packages: read
  pull-requests: read
  repository-projects: read
  checks: read

jobs:
  build:
    strategy:
      matrix:
        node-version: [14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Wait for install depedencies
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-install
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: install-depedencies

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --fronzen-lockfile

      - name: Check if build successfully
        run: yarn build

      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_script: size
          skip_step: install
